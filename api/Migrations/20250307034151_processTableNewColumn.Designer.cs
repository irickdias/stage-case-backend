// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250307034151_processTableNewColumn")]
    partial class processTableNewColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("api.Models.Process", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("documentation")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("finished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("parentProcessId")
                        .HasColumnType("int");

                    b.Property<string>("prioprity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responsibles")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("sectorId")
                        .HasColumnType("int");

                    b.Property<string>("tools")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.HasIndex("parentProcessId");

                    b.HasIndex("sectorId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("api.Models.Sector", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("departmentId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("departmentId");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("api.Models.Process", b =>
                {
                    b.HasOne("api.Models.Process", "parentProcess")
                        .WithMany("children")
                        .HasForeignKey("parentProcessId");

                    b.HasOne("api.Models.Sector", "sector")
                        .WithMany("processes")
                        .HasForeignKey("sectorId");

                    b.Navigation("parentProcess");

                    b.Navigation("sector");
                });

            modelBuilder.Entity("api.Models.Sector", b =>
                {
                    b.HasOne("api.Models.Department", "department")
                        .WithMany("sectors")
                        .HasForeignKey("departmentId");

                    b.Navigation("department");
                });

            modelBuilder.Entity("api.Models.Department", b =>
                {
                    b.Navigation("sectors");
                });

            modelBuilder.Entity("api.Models.Process", b =>
                {
                    b.Navigation("children");
                });

            modelBuilder.Entity("api.Models.Sector", b =>
                {
                    b.Navigation("processes");
                });
#pragma warning restore 612, 618
        }
    }
}
